(in-package #:advent2021)

(defun read-gamma-rate ()
  (loop :for gamma :in
		   (uiop:read-file-lines
		    (asdf:system-relative-pathname 'advent2021 "inputs/day3-test"))
	collect (mapcar #'parse-integer (split "" gamma))))

(defun day3/solution1 ()
  (loop :for gamma :in
		   (read-gamma-rate)
	counting (first gamma) into tot
	counting (oddp (nth 0 gamma)) into ga_1
	counting (oddp (nth 1 gamma)) into ga_2
	counting (oddp (nth 2 gamma)) into ga_3
	counting (oddp (nth 3 gamma)) into ga_4
	counting (oddp (nth 4 gamma)) into ga_5
	finally (return
			(format t "#b~a~a~a~a~a" 
			(if (> 0.5 (/ ga_1 tot)) 1 0)
			(if (> 0.5 (/ ga_2 tot)) 1 0)
			(if (> 0.5 (/ ga_3 tot)) 1 0)
			(if (> 0.5 (/ ga_4 tot)) 1 0)
			(if (> 0.5 (/ ga_5 tot)) 1 0)))))
